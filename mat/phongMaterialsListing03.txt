This fragment of C/C++ code supplies a wide variety of tediously-entered material reflectance coefficients for use with Phong lighting. 

createMatl(int nuMatl)
//------------------------------------------------------------------------------
// Use nuMatl to select one of from pre-defined kinds of Phong Materials.
// These emissive, ambient, diffuse, specular components were chosen for
// least-squares best-fit to measured BRDFs of actual material samples.
// (values copied from pg. 51, "Advanced Graphics Programming"
// Tom McReynolds, David Blythe Morgan-Kaufmann Publishers (c)2005).
//
// They demonstrate both the strengths and the weaknesses of Phong lighting:  // if their appearance makes you ask "how could we do better than this?"
// then look into 'Cook-Torrance' shading methods, texture maps, bump maps, 
// and beyond.
//   --Jack Tumblin 2/2013
{

    switch(nuMatl)
    {
    case MATL_CUSTOM:
        strncpy(matlName, "MATL_CUSTOM", MATL_STRMAX);       // set text label
        break;
    case MATL_RED_PLASTIC:
        K_emit.put(0.0,     0.0,    0.0,    1.0);
        K_ambi.put(0.1,     0.1,    0.1,    1.0);
        K_diff.put(0.6,     0.0,    0.0,    1.0);
        K_spec.put(0.6,     0.6,    0.6,    1.0);   K_shiny = 100.0f;
        strncpy(matlName, "MATL_RED_PLASTIC", MATL_STRMAX);  // set text label
        break;
    case MATL_GRN_PLASTIC:
        K_emit.put(0.0,     0.0,    0.0,    1.0);
        K_ambi.put(0.05,    0.05,   0.05,   1.0);
        K_diff.put(0.0,     0.6,    0.0,    1.0);
        K_spec.put(0.2,     0.2,    0.2,    1.0);   K_shiny = 60.0f;
        strncpy(matlName, "MATL_GRN_PLASTIC", MATL_STRMAX);  // set text label
        break;
    case MATL_BLU_PLASTIC:
        K_emit.put(0.0,     0.0,    0.0,    1.0);
        K_ambi.put(0.05,    0.05,   0.05,   1.0);
        K_diff.put(0.0,     0.2,    0.6,    1.0);
        K_spec.put(0.1,     0.2,    0.3,    1.0);   K_shiny = 5.0f;
        strncpy(matlName, "MATL_BLU_PLASTIC", MATL_STRMAX);  // set text label
        break;
    case MATL_BLACK_PLASTIC:
        K_emit.put(0.0,     0.0,    0.0,    1.0);
        K_ambi.put(0.0,     0.0,    0.0,    1.0);
        K_diff.put(0.01,    0.01,   0.01,   1.0);
        K_spec.put(0.5,     0.5,    0.5,    1.0);   K_shiny = 32.0f;
        strncpy(matlName, "MATL_BLACK_PLASTIC", MATL_STRMAX);  // set text label
        break;
    case MATL_BLACK_RUBBER:
        K_emit.put(0.0,     0.0,    0.0,    1.0);
        K_ambi.put(0.02,    0.02,   0.02,   1.0);
        K_diff.put(0.01,    0.01,   0.01,   1.0);
        K_spec.put(0.4,     0.4,    0.4,    1.0);   K_shiny = 10.0f;
        strncpy(matlName, "MATL_BLACK_RUBBER", MATL_STRMAX);  // set text label
        break;
    case MATL_BRASS:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.329412, 0.223529, 0.027451, 1.0);
        K_diff.put(0.780392, 0.568627, 0.113725, 1.0);
        K_spec.put(0.992157, 0.941176, 0.807843, 1.0);   K_shiny = 27.8974f;
        strncpy(matlName, "MATL_BRASS", MATL_STRMAX);  // set text label
        break;
    case MATL_BRONZE_DULL:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.2125,   0.1275,   0.054,    1.0);
        K_diff.put(0.714,    0.4284,   0.18144,  1.0);
        K_spec.put(0.393548, 0.271906, 0.166721, 1.0);  K_shiny = 25.6f;
        strncpy(matlName, "MATL_BRONZE_DULL", MATL_STRMAX);  // set text label
        break;
    case MATL_BRONZE_SHINY:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.25,     0.148,    0.06475,  1.0);
        K_diff.put(0.4,      0.2368,   0.1036,   1.0);
        K_spec.put(0.774597, 0.458561, 0.200621, 1.0);  K_shiny = 76.8f;
        strncpy(matlName, "MATL_BRONZE_SHINY", MATL_STRMAX);  // set text label
        break;
    case MATL_CHROME:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.25,     0.25,     0.25,     1.0);
        K_diff.put(0.4,      0.4,      0.4,      1.0);
        K_spec.put(0.774597, 0.774597, 0.774597, 1.0);  K_shiny = 76.8f;
        strncpy(matlName, "MATL_CHROME", MATL_STRMAX);  // set text label
        break;
    case MATL_COPPER_DULL:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.19125,  0.0735,   0.0225,   1.0);
        K_diff.put(0.7038,   0.27048,  0.0828,   1.0);
        K_spec.put(0.256777, 0.137622, 0.086014, 1.0);  K_shiny = 12.8f;
        strncpy(matlName, "MATL_COPPER_DULL", MATL_STRMAX);  // set text label
        break;
    case MATL_COPPER_SHINY:
        K_emit.put(0.0,      0.0,      0.0,       1.0);
        K_ambi.put(0.2295,   0.08825,  0.0275,    1.0);
        K_diff.put(0.5508,   0.2118,   0.066,     1.0);
        K_spec.put(0.580594, 0.223257, 0.0695701, 1.0);  K_shiny = 51.2f;
        strncpy(matlName, "MATL_COPPER_SHINY", MATL_STRMAX);  // set text label
        break;
    case MATL_GOLD_DULL:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.24725,  0.1995,   0.0745,   1.0);
        K_diff.put(0.75164,  0.60648,  0.22648,  1.0);
        K_spec.put(0.628281, 0.555802, 0.366065, 1.0);  K_shiny = 51.2f;
        strncpy(matlName, "MATL_GOLD_DULL", MATL_STRMAX);  // set text label
        break;
    case MATL_GOLD_SHINY:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.24725,  0.2245,   0.0645,   1.0);
        K_diff.put(0.34615,  0.3143,   0.0903,   1.0);
        K_spec.put(0.797357, 0.723991, 0.208006, 1.0);  K_shiny = 83.2f;
        strncpy(matlName, "MATL_GOLD_SHINY", MATL_STRMAX);  // set text label
        break;
    case MATL_PEWTER:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.105882, 0.058824, 0.113725, 1.0);
        K_diff.put(0.427451, 0.470588, 0.541176, 1.0);
        K_spec.put(0.333333, 0.333333, 0.521569, 1.0);  K_shiny = 9.84615f;
        strncpy(matlName, "MATL_PEWTER", MATL_STRMAX);  // set text label
        break;
    case MATL_SILVER_DULL:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.19225,  0.19225,  0.19225,  1.0);
        K_diff.put(0.50754,  0.50754,  0.50754,  1.0);
        K_spec.put(0.508273, 0.508273, 0.508273, 1.0);  K_shiny = 51.2f;
        strncpy(matlName, "MATL_SILVER_DULL", MATL_STRMAX);  // set text label
        break;
    case MATL_SILVER_SHINY:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.23125,  0.23125,  0.23125,  1.0);
        K_diff.put(0.2775,   0.2775,   0.2775,   1.0);
        K_spec.put(0.773911, 0.773911, 0.773911, 1.0);  K_shiny = 89.6f;
        strncpy(matlName, "MATL_SILVER_SHINY", MATL_STRMAX);  // set text label
        break;
    case MATL_EMERALD:
        K_emit.put(0.0,     0.0,      0.0,     1.0);
        K_ambi.put(0.0215,  0.1745,   0.0215,  0.55);
        K_diff.put(0.07568, 0.61424,  0.07568, 0.55);
        K_spec.put(0.633,   0.727811, 0.633,   0.55);   K_shiny = 76.8f;
        strncpy(matlName, "MATL_EMERALD", MATL_STRMAX);  // set text label
        break;
    case MATL_JADE:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.135,    0.2225,   0.1575,   0.95);
        K_diff.put(0.54,     0.89,     0.63,     0.95);
        K_spec.put(0.316228, 0.316228, 0.316228, 0.95);   K_shiny = 12.8;
        strncpy(matlName, "MATL_JADE", MATL_STRMAX);  // set text label
        break;
    case MATL_OBSIDIAN:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.05375,  0.05,     0.06625,  0.82);
        K_diff.put(0.18275,  0.17,     0.22525,  0.82);
        K_spec.put(0.332741, 0.328634, 0.346435, 0.82);   K_shiny = 38.4;
        strncpy(matlName, "MATL_OBSIDIAN", MATL_STRMAX);  // set text label
        break;
    case MATL_PEARL:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.25,     0.20725,  0.20725,  0.922);
        K_diff.put(1.0,      0.829,    0.829,    0.922);
        K_spec.put(0.296648, 0.296648, 0.296648, 0.922);   K_shiny = 11.264f;
        strncpy(matlName, "MATL_PEARL", MATL_STRMAX);  // set text label
        break;
    case MATL_RUBY:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.1745,   0.01175,  0.01175,  0.55);
        K_diff.put(0.61424,  0.04136,  0.04136,  0.55);
        K_spec.put(0.727811, 0.626959, 0.626959, 0.55);   K_shiny = 76.8f;
        strncpy(matlName, "MATL_RUBY", MATL_STRMAX);  // set text label
        break;
    case MATL_TURQUOISE:
        K_emit.put(0.0,      0.0,      0.0,      1.0);
        K_ambi.put(0.1,      0.18725,  0.1745,   0.8);
        K_diff.put(0.396,    0.74151,  0.69102,  0.8);
        K_spec.put(0.297254, 0.30829,  0.306678, 0.8);   K_shiny = 12.8f;
        strncpy(matlName, "MATL_TURQUOISE", MATL_STRMAX);  // set text label
        break;

    default:
        // ugly featureless (emissive-only) red:
        K_emit.put(1.0, 0.0, 0.0, 1.0); // DEFAULT: ugly RED emissive light only
        K_ambi.put(0.0, 0.0, 0.0, 1.0); // r,g,b,alpha  ambient reflectance
        K_diff.put(0.0, 0.0, 0.0, 1.0); //              diffuse reflectance
        K_spec.put(0.0, 0.0, 0.0, 1.0); //              specular reflectance
        K_shiny = 1.0f;        // Default (don't set specular exponent to zero!)
        strncpy(matlName, "MATL_DEFAULT_RED", MATL_STRMAX);  // set text label
        cout << "CMatl::createMatl(): ERROR--invalid matlType value!\n" << endl;
        break;
    }
}